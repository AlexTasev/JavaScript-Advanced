class Vacationer {
    constructor(fullName, creditCard) {
        this.fullName = fullName;
        this.creditCard = {
            cardNumber: 1111,
            expirationDate: "",
            securityNumber: 111
        };
        if (creditCard !== undefined){
            this.addCreditCardInfo(creditCard);
        }
        this.wishList = [];
        this.idNumber = this.generateIDNumber();
    }

    get fullName() {
        return this._fullName;
    }

    set fullName(input) {
        if (input.length !== 3) {
            throw new Error("Name must include first name, middle name and last name");
        }
        let pattern = /\b[A-Z][a-z]+\b/;
        for (const name of input) {
            if (pattern.test(name) === false) {
                throw new Error("Invalid full name");
            }
        }
        let fullName = {
            firstName: input[0],
            middleName: input[1],
            lastName: input[2]
        };
        this._fullName = fullName;
    }

    generateIDNumber() {
        let idNumber = (231 * this.fullName.firstName.charCodeAt(0)) + (139 * this.fullName.middleName.length);
        idNumber = idNumber.toString();

        let lastChar = this.fullName.lastName[this.fullName.lastName.length - 1];
        let vowels = ["a", "e", "o", "i", "u"];
        if (vowels.includes(lastChar)) {
            idNumber += "8";
        } else {
            idNumber += "7"
        }
        return idNumber;
    }

    addCreditCardInfo(input) {
        if (input.length !== 3) {
            throw new Error("Missing credit card information");
        }
        if (typeof input[0] !== "number" || typeof input[2] !== "number") {
            throw new Error("typeof input[0] !== Number ")
        }

        this.creditCard.cardNumber = input[0];
        this.creditCard.expirationDate = input[1];
        this.creditCard.securityNumber = input[2];
    }

    addDestinationToWishList(destination) {
        if (this.wishList.includes(destination)) {
            throw new Error("Destination already exists in wishlist")
        }
        this.wishList.push(destination);
        this.wishList.sort((a,b) => a.length - b.length)
    }

    getVacationerInfo() {
        let output = "";
        output += `Name: ${this.fullName.firstName} ${this.fullName.middleName} ${this.fullName.lastName}\n`;
        output += `ID Number: ${this.idNumber}\n`;
        if (this.wishList.length === 0) {
            output+= "Wishlist:\nempty\n";
        } else {
            output += `Wishlist:\n${this.wishList.join(", ")}\n`;
        }
        output += `Credit Card:\nCard Number: ${this.creditCard.cardNumber}\nExpiration Date: ${this.creditCard.expirationDate}\nSecurity Number: ${this.creditCard.securityNumber}`;
        return output;
    }
}


// Initialize vacationers with 2 and 3 parameters
let vacationer1 = new Vacationer(["Vania", "Ivanova", "Zhivkova"]);
let vacationer2 = new Vacationer(["Tania", "Ivanova", "Zhivkova"],
    [123456789, "10/01/2018", 777]);


// //Should throw an error (Invalid full name)
// try {
//     let vacationer3 = new Vacationer(["Vania", "Ivanova", "ZhiVkova"]);
// } catch (err) {
//     console.log("Error: " + err.message);
// }

// // Should throw an error (Missing credit card information)
// try {
//     let vacationer3 = new Vacationer(["Zdravko", "Georgiev", "Petrov"]);
//     vacationer3.addCreditCardInfo([123456789, "20/10/2018"]);
// } catch (err) {
//     console.log("Error: " + err.message);
// }
//
vacationer1.addDestinationToWishList('Spain');
vacationer1.addDestinationToWishList('Germany');
vacationer1.addDestinationToWishList('Bali');

// console.log(vacationer1.wishList);

// Return information about the vacationers
console.log(vacationer1.getVacationerInfo());
console.log(vacationer2.getVacationerInfo());

